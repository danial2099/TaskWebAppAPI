@page "/Users/Profile/{Id:int}"
@using HomeWebApp.Models

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<style>
    .userTable {
        width: 100%;
        border-collapse: collapse;
    }

        .userTable th, .userTable td {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .userTable th {
            background-color: #f2f2f2;
            text-align: left;
        }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }
</style>

<h1>User Profile</h1>
<div class="row">
    <div class="col-lg-8">
        <div class="row mb-3">
            <label class="col-md-4 col-form-label">Name:</label>
            <div class="col-md-8">
                <input class="form-control" @bind="UserData.Name" readonly />
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-md-4 col-form-label">Email:</label>
            <div class="col-md-8">
                <input class="form-control" @bind="UserData.Email" readonly />
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-md-4 col-form-label">Phone Number:</label>
            <div class="col-md-8">
                <input class="form-control" @bind="UserData.PhoneNumber" readonly />
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-md-4 col-form-label">IC Number:</label>
            <div class="col-md-8">
                <input class="form-control" @bind="UserData.ICNumber" readonly />
            </div>
        </div>
    </div>
</div>

@inject HttpClient http
@inject NavigationManager navManager

@code {
    [Parameter]
    public int Id { set; get; }

    public Users UserData { set; get; } = new();

    protected override async Task OnParametersSetAsync()
    {
        var response = await http.GetFromJsonAsync<Users>("https://localhost:4000/api/tasks/" + Id);
        if (response != null)
        {
            UserData = response;
        }
        else
        {
            // Handle the case where the user is not found
            navManager.NavigateTo("/Users");
        }
    }
}

