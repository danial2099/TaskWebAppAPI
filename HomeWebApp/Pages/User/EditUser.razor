@page "/Users/EditUser/{Id:int}"
@using HomeWebApp.Models
@using System.Text.Json.Nodes

<div class=" row">
    <div class="col-lg-8">
        <h1 class=" mb-5"> Edit User </h1>
    
    @if (users ==null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="row mb-3">
                <label class="col-md-4 col-form-label"> User ID : </label>
                <div class="col-md-8">
                    <input class="form-control-plaintext" value="@Id" readonly />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-md-4 col-form-label"> Name : </label>
                <div class="col-md-8">
                    <input class="form-control" @bind="userdata.Name"/>
                    <span class=" text-danger">@Errors["Name"]?[0]</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-md-4 col-form-label"> Email : </label>
                <div class="col-md-8">
                    <input class="form-control" @bind="userdata.Email"/>
                    <span class=" text-danger">@Errors["Email"]?[0]</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-md-4 col-form-label"> Phone Number : </label>
                <div class="col-md-8">
                    <input class="form-control" @bind="userdata.PhoneNumber" />
                    <span class=" text-danger">@Errors["PhoneNumber"]?[0]</span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-md-4 col-form-label"> IC Number : </label>
                <div class="col-md-8">
                    <input class="form-control" @bind="userdata.ICNumber" />
                    <span class=" text-danger">@Errors["ICNumber"]?[0]</span>
                </div>
            </div>
            <div class="row">
                <div class="offset-md-4 col-md-4 d-grid">
                    <button class="btn btn-primary" @onclick="SaveUser">Submit</button>
                </div>
                <div class="col-md-4 d-grid">
                    <a class="btn btn-outline-primary" href="/Users">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>


@inject HttpClient http
@inject NavigationManager navManager

@code {
    [Parameter]
    public int Id { set; get; }
    public Users? users = null;
    public Models.CreateUser userdata { set; get; } = new();
    public JsonNode Errors { set; get; } = new JsonObject();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            users = await http.GetFromJsonAsync<Users>("https://localhost:4000/api/user/" + Id);
            userdata.Name = users?.Name ?? "";
            userdata.Email = users?.Email ?? "";
            userdata.PhoneNumber = users?.PhoneNumber ?? "";
            userdata.ICNumber = users?.ICNumber ?? "";

        }

        catch (Exception ex)
        {
            Console.WriteLine("Exception : " + ex.Message);
        }
    }

    protected async Task SaveUser()
    {
        var response = await http.PutAsJsonAsync("https://localhost:4000/api/user/" + Id, userdata);
        if (response.IsSuccessStatusCode)
        {
            //redirect to list of client
            navManager.NavigateTo("/Users");
        }
        else
        {
            var strResponse = await response.Content.ReadAsStringAsync();

            try
            {
                var jsonResponse = JsonNode.Parse(strResponse);
                Errors = jsonResponse?["errors"] ?? new JsonObject();
            }
            catch (Exception ex)
            {

            }

        }
    }



}
